import arcpy, os.path

path = r"C:\PythonWorkspace\PDProject"
arcpy.env.workspace = path

# Variables
bufferSize = "300 Meters"

# Creates the feature class for the boundary
try:
    arcpy.CreateFeatureclass_management(path, "boundary.shp", "POLYGON")

    # Create polygon of size 10km x 10km
    array = arcpy.Array([arcpy.Point(0, 0),
                         arcpy.Point(0, 10000),
                         arcpy.Point(10000, 10000),
                         arcpy.Point(10000, 0)
                         ])
    polygon = arcpy.Polygon(array)

    # Open an InsertCursor and insert polygon
    cursor = arcpy.da.InsertCursor("boundary.shp", ["SHAPE@"])
    cursor.insertRow([polygon])
    del cursor
    print "Boundary file created"
except:
    print "Boundary file exists"

# Creates the feature class for the burglaries
try:
    arcpy.CreateFeatureclass_management(path, "burglaries.shp", "POINT")
    arcpy.AddField_management("burglaries.shp", "CID", "LONG", "10")
    arcpy.DeleteField_management("burglaries.shp", "Id")
    print "Burglaries file created"
except:
    print "Burglaries file exists"

# Creates the first random burglary point
arcpy.CreateRandomPoints_management(path, "initPoint", "boundary.shp", "", 1) 

# Creates the buffer around the initial point
arcpy.Buffer_analysis("initPoint.shp", "initBuff.shp", bufferSize)

# Adds the initial point into the burglaries.shp class that will contain all burglaries
arcpy.Append_management("initPoint.shp", "burglaries.shp", "TEST")

##TODO: Add in type field to store type of burglary
##TODO: Delete the initial point so the code can be reused
